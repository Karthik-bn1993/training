name: Terraform

on:
  workflow_dispatch:

permissions:
  id-token: write
  pull-requests: write
  contents: write

jobs:
  lint-and-security:
    name: Lint and Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install TFLint
        run: |
          wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/
          tflint --version

      - name: Run TFLint
        run: tflint --init && tflint -f compact
        working-directory: ./

      - name: Install Checkov
        run: |
          pip3 install --upgrade pip
          pip3 install checkov

      - name: Run Checkov
        run: checkov -d . --framework terraform --soft-fail
        working-directory: ./

  terraform:
    name: Terraform Operations
    runs-on: ubuntu-latest
    needs: lint-and-security

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GithubActionsTerraform

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ">= 1.11.4"

      - name: Initialize Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
        working-directory: ./

      - name: Validate Terraform
        run: terraform validate
        working-directory: ./

      - name: Generate Terraform Plan
        run: terraform plan -no-color -lock=false > plan.txt
        working-directory: ./

      - name: Create Plan Output Text File
        run: |
          mkdir -p reports
          echo "#Deployment Report" > reports/report.md
          echo "This file was generated during the github actions workflow run." >> reports/report.md
          echo "" >> reports/report.md
          echo "## Terraform Plan Output" >> reports/report.md
          cat plan.txt >> reports/report.md
        working-directory: ./

      - name: Commit and push the report
        run: |
          git config --global user.name "karthik-bn1993"
          git config --global user.email "karthik.neelakanta1993@gmail.com"
          git add reports/report.md
          git commit -m "Add deployment report"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./

      - name: Apply Destroy
        run: terraform destroy -auto-approve -lock=false
        working-directory: ./
